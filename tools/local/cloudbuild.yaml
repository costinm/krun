timeout: 1200s
options:
  substitution_option: ALLOW_LOOSE
  #machineType: 'N1_HIGHCPU_8'

# Execution environment:
# HOME=/builder/home
# pwd=/workspace
# BUILDER_OUTPUT=/builder/outputs
# GOCACHE=/gocache


steps:


  - name: gcr.io/$PROJECT_ID/ko
    entrypoint: /bin/sh
    id: base-ko
    env:
      - KO_DOCKER_REPO=gcr.io/$PROJECT_ID
    waitFor:
      - "-"
    args:
      - -c
      - |
        KO_IMAGE=$(ko publish -B -t $COMMIT_SHA ./)

        echo $$KO_IMAGE > /workspace/base_image

  # Use docker to build fortio - this is what users will do
  - name: 'gcr.io/cloud-builders/docker'
    id: fortio
    entrypoint: /bin/bash
    env:
      - DOCKER_CLI_EXPERIMENTAL=enabled
      - TAG=$_GIT_TAG
    waitFor:
      - base-ko
    args:
      - -c
      - |
        docker build -t gcr.io/$PROJECT_ID/fortio-mesh:$COMMIT_SHA --build-arg BASE=gcr.io/$PROJECT_ID/krun:$COMMIT_SHA samples/fortio
        docker push gcr.io/$PROJECT_ID/fortio-mesh:$COMMIT_SHA

  # Deploy the canary, run tests
  # Missing alpha command
  #- name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
  - name: gcr.io/wlhe-cr/gcloud-alpha
    #- name: gcr.io/$PROJECT_ID/krun-builder:latest
    entrypoint: /bin/sh
    env:
      - PROJECT_ID=$PROJECT_ID
      - CLUSTER_NAME=asm-cr
      - CLUSTER_LOCATION=us-central1-c
      - FORTIO_IMAGE=gcr.io/$PROJECT_ID/fortio-mesh:$COMMIT_SHA
    waitFor:
      - fortio
    args:
      - -c
      - |
        make canary


  # Run tests. We need a docker image with cloudrun (for get credentials) and go
  #  get-credentials generate a file with exec gcloud - so it must be present.
  # TODO: use krun to generate a config using metadata server, or add golang to alpine
  #- name: 'gcr.io/google.com/cloudsdktool/cloud-sdk:alpine'
  - name: gcr.io/wlhe-cr/gcloud-alpha
    #- name: gcr.io/$PROJECT_ID/krun-builder:latest
    entrypoint: /bin/sh
    env:
      - PROJECT_ID=$PROJECT_ID
      - CLUSTER_NAME=asm-cr
      - CLUSTER_LOCATION=us-central1-c
      - FORTIO_IMAGE=gcr.io/$PROJECT_ID/fortio-mesh:$COMMIT_SHA
      - KUBECONFIG=/workspace/kubeconfig
    waitFor:
      - "-"
    args:
      - -c
      - |
        gcloud container clusters get-credentials asm-cr --zone us-central1-c --project $PROJECT_ID
        make test || true
