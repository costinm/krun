# Configuration for connecting from pods to cloudrun using the SNI gateway
#
# This can (and will be) auto-generated.

apiVersion: networking.istio.io/v1beta1
kind: ServiceEntry
metadata:
  # Name should match the workload name used in cloudrun
  name: cloudrun
  labels:
    topology.istio.io/network: hbone
spec:
  hosts:
    # Will match in DR and VirtualServices
    - fortio-cloudrun-icq63pqnqq-uc.a.run.app
    - cloudrun.fortio.svc
  location: MESH_INTERNAL
  ports:
    - number: 8080
      name: http
      protocol: TLS
  resolution: DNS

---
# Service name matches the actual service name in CloudRun.
# This is used to acccess only the service in cloudrun, in a region. Can be used as a subset

# TODO: auto-create this if it doesn't exist, in SNIGate
apiVersion: v1
kind: Service
metadata:
  name: fortio-asm-cr-icq63pqnqq-uc
spec:
  ports:
    # Standard port for SNI routing in gateways, same as east-west gateway
    - port: 8080
      name: http
  selector:
    app: cloudrun

---

apiVersion: v1
kind: Service
metadata:
  name: cloudrun
spec:
  ports:
    # Standard port for SNI routing in gateways, same as east-west gateway
    - port: 8080
      name: http
  selector:
    app: cloudrun

---
apiVersion: networking.istio.io/v1alpha3
kind: WorkloadGroup
metadata:
  name: cloudrun
spec:
  metadata:
    labels:
      app: cloudrun
  template:
    ports:
      http: 8080
    serviceAccount: default
#
# TODO: declare probe, use it on the cloudrun !

---

apiVersion: networking.istio.io/v1alpha3
kind: WorkloadEntry
metadata:
  name: cloudrun-local
spec:
  address: 127.0.0.1
  serviceAccount: default
  #network: %q
  labels:
    app: cloudrun

---
apiVersion: networking.istio.io/v1alpha3
kind: WorkloadEntry
metadata:
  name: cloudrun-sni
spec:
  address: 127.0.0.1
  serviceAccount: default
  network: hbone
  labels:
    app: cloudrun
