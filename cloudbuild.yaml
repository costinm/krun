timeout: 1200s
options:
  substitution_option: ALLOW_LOOSE
  #machineType: 'N1_HIGHCPU_8'

# Execution environment:
# HOME=/builder/home
# pwd=/workspace
# BUILDER_OUTPUT=/builder/outputs
# GOCACHE=/gocache

steps:

  - name: 'gcr.io/kaniko-project/executor:latest'
    args:
      - --destination=gcr.io/$PROJECT_ID/krun-kaniko:$COMMIT_SHA
      - --cache=true
      - --cache-ttl=240h
    timeout: 1200s

  - name: 'gcr.io/kaniko-project/executor:latest'
    args:
      - --destination=gcr.io/$PROJECT_ID/fortio-kaniko:$COMMIT_SHA
      - --dockerfile=samples/fortio/Dockerfile
      - --context=dir://samples/fortio
      - --build-arg=BASE=gcr.io/$PROJECT_ID/krun-kaniko:$COMMIT_SHA
      - --cache=true
      - --cache-ttl=240h
    timeout: 1200s

  # TODO: combine gcloud, go, etc in single image - Istio build image is huge
  # Also includes gcloud 349.0.0
  # https://github.com/GoogleCloudPlatform/cloud-builders-community/tree/master/ko is a good
  # base, includes ko, kubectl, gcloud
  # They use: CLOUDSDK_COMPUTE_ZONE, CLOUDSDK_CONTAINER_CLUSTER, CLOUDSDK_CORE_PROJECT
  - name: gcr.io/istio-testing/build-tools:master-2021-08-06T18-11-12
    # name: golang
    entrypoint: /bin/bash
    env:
      - PROJECT_ID=$PROJECT_ID
      - CLUSTER_NAME=asm-cr
      - CLUSTER_LOCATION=us-central1-c
      - FORTIO_IMAGE=gcr.io/$PROJECT_ID/fortio-kaniko:$COMMIT_SHA
    args:
      - -c
      - |
        export KUBECONFIG=/builder/home/config
        gcloud container clusters get-credentials asm-cr --zone us-central1-c --project $PROJECT_ID
        go test -timeout 2m -v ./... || true
        #go get -u github.com/jstemmer/go-junit-report
        #2>&1 go test -timeout 1m -v ./... | tee sponge.log
        #/go/bin/go-junit-report -set-exit-code < sponge.log > ${SHORT_SHA}_test_log.xml

        make test

#  - name: 'gcr.io/cloud-builders/docker'
#    env:
#      - DOCKER_CLI_EXPERIMENTAL=enabled
#      - TAG=$_GIT_TAG
#    args: [ 'build', '-t', 'gcr.io/$PROJECT_ID/fortio-mesh', '--build-arg', 'BASE=gcr.io/$PROJECT_ID/krun-kaniko:$COMMIT_SHA', 'samples/fortio' ]

#  - name: 'gcr.io/cloud-builders/docker'
#    args: ['push', 'gcr.io/$PROJECT_ID/fortio-mesh']

#  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk:331.0.0'
#    entrypoint: make
#    env:
#      - IMAGE=gcr.io/$PROJECT_ID/krun-kaniko:$COMMIT_SHA
#    args:
#      - deploy/fortio

  # Final step - if everything else was fine, use real docker to build the branch golden image
  - name: 'gcr.io/cloud-builders/docker'
    env:
      - DOCKER_CLI_EXPERIMENTAL=enabled
      - TAG=$_GIT_TAG
    args: [ 'build', '-t', 'gcr.io/$PROJECT_ID/mesh-base:$BRANCH_NAME', '.' ]


images:
  - 'gcr.io/wlhe-cr/mesh-base:$BRANCH_NAME'
  - 'gcr.io/wlhe-cr/fortio-mesh:$BRANCH_NAME'


substitutions:
  #PROJECT_ID: costin-asm1
  # _GIT_TAG will be filled with a git-based tag for the image, of the form vYYYYMMDD-hash, and
  # can be used as a substitution
  _GIT_TAG: '12345'
  # _PULL_BASE_REF will contain the ref that was pushed to to trigger this build -
  # a branch like 'master' or 'release-0.2', or a tag like 'v0.2'.
  _PULL_BASE_REF: 'master'
