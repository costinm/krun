# Manual config for routing to a CloudRun service using the SNI
# gateway. This will be automated, but useful to see the actual config.
#
# TODO: turn into template (envsubst) first
apiVersion: v1
kind: Service
metadata:
  name: ${K_SERVICE}
  namespace: ${WORKLOAD_NAMESPACE}
spec:
  # Service name matches the actual service name in CloudRun.
  # This is used to acccess only the service in cloudrun, in a region. Can be used as a subset
  # TODO: auto-create this if it doesn't exist, in SNIGate
  ports:
    # Standard port for SNI routing in gateways
    - port: 8080
      name: http
      targetPort: 15443
  selector:
    app: ${WORKLOAD_NAME}

---

apiVersion: networking.istio.io/v1alpha3
kind: DestinationRule
metadata:
  name: ${WORKLOAD_NAME}
  namespace: ${WORKLOAD_NAMESPACE}
spec:
  host: ${K_SERVICE}.fortio.svc.cluster.local
  trafficPolicy:
    tls:
      mode: ISTIO_MUTUAL

---

apiVersion: networking.istio.io/v1alpha3
kind: WorkloadGroup
metadata:
  name: ${WORKLOAD_NAME}
  namespace: ${WORKLOAD_NAMESPACE}
spec:
  metadata:
    labels:
      app: ${WORKLOAD_NAME}
    annotations:
      security.cloud.google.com/IdentityProvider: google
  template:
    ports:
      http: 8080
    serviceAccount: k8s-fortio@wlhe-cr.iam.gserviceaccount.com
---
apiVersion: networking.istio.io/v1alpha3
kind: WorkloadEntry
metadata:
  name: ${WORKLOAD_NAME}-sni
  namespace: ${WORKLOAD_NAMESPACE}
spec:
  labels:
    app: ${WORKLOAD_NAME}
  serviceAccount: default
  address: ${SNI_GATE_IP}
  ports:
    http: 15442
---

apiVersion: networking.istio.io/v1alpha3
kind: ServiceEntry
metadata:
  namespace: ${WORKLOAD_NAMESPACE}
  name: ${K_SERVICE}
#  labels:
#    topology.istio.io/network: hbone
spec:
  hosts:
    - ${K_SERVICE}.fortio.svc.cluster.local
  location: MESH_INTERNAL
  ports:
    - number: 8080
      name: http
      protocol: HTTP
      targetPort: 15443
  resolution: STATIC
  workloadSelector:
    labels:
      app: ${WORKLOAD_NAME}
